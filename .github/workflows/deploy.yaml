name: Build & Deploy events-api

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/darc-software/events-api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Build & Push (latest, main, sha)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:main
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  deploy-api:
    name: Deploy to k3s over SSH
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy release
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.K3S_HOST }}         # your DDNS/IP
          username: ${{ secrets.K3S_USER }}     # e.g. devin
          key: ${{ secrets.K3S_SSH_KEY }}       # private key contents
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail

            # KUBECONFIG must already be readable by this user
            export KUBECONFIG="$HOME/.kube/config"
            echo "KUBECONFIG -> $KUBECONFIG"
            ls -l "$KUBECONFIG" || true

            # We assume your server has the helm-values repo present & up-to-date
            cd "$HOME/helm-values"

            # Upgrade/install with the new image tag pinned to the Git SHA
            helm upgrade --install events-api ./charts/events-api \
              -n data \
              -f releases/data/events-api/values.yaml \
              --set image.tag=${{ github.sha }}

            # Wait for rollout & show status
            kubectl -n data rollout status deploy/events-api --timeout=5m
            kubectl -n data get pods -l app.kubernetes.io/instance=events-api -o wide